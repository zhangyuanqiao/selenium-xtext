/*
 * generated by Xtext 2.9.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Main";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMain
entryRuleMain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainRule()); }
	iv_ruleMain=ruleMain
	{ $current=$iv_ruleMain.current; }
	EOF;

// Rule Main
ruleMain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='File'
		{
			newLeafNode(otherlv_0, grammarAccess.getMainAccess().getFileKeyword_0());
		}
		(
			(
				lv_fileName_1_0=RULE_STRING
				{
					newLeafNode(lv_fileName_1_0, grammarAccess.getMainAccess().getFileNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMainRule());
					}
					setWithLastConsumed(
						$current,
						"fileName",
						lv_fileName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getMainAccess().getWithKeyword_2());
		}
		otherlv_3='browser'
		{
			newLeafNode(otherlv_3, grammarAccess.getMainAccess().getBrowserKeyword_3());
		}
		(
			(
				lv_browserName_4_0=RULE_STRING
				{
					newLeafNode(lv_browserName_4_0, grammarAccess.getMainAccess().getBrowserNameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMainRule());
					}
					setWithLastConsumed(
						$current,
						"browserName",
						lv_browserName_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getMainAccess().getColonKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMainAccess().getOrdersActionParserRuleCall_6_0_0());
					}
					lv_orders_6_1=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMainRule());
						}
						add(
							$current,
							"orders",
							lv_orders_6_1,
							"org.xtext.example.mydsl.MyDsl.Action");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMainAccess().getOrdersStructureParserRuleCall_6_0_1());
					}
					lv_orders_6_2=ruleStructure
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMainRule());
						}
						add(
							$current,
							"orders",
							lv_orders_6_2,
							"org.xtext.example.mydsl.MyDsl.Structure");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getNavigateParserRuleCall_0());
		}
		this_Navigate_0=ruleNavigate
		{
			$current = $this_Navigate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getClickParserRuleCall_1());
		}
		this_Click_1=ruleClick
		{
			$current = $this_Click_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getFillParserRuleCall_2());
		}
		this_Fill_2=ruleFill
		{
			$current = $this_Fill_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSetCheckBoxParserRuleCall_3());
		}
		this_SetCheckBox_3=ruleSetCheckBox
		{
			$current = $this_SetCheckBox_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getRefreshParserRuleCall_4());
		}
		ruleRefresh
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getAlertParserRuleCall_5());
		}
		this_Alert_5=ruleAlert
		{
			$current = $this_Alert_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getStoreParserRuleCall_6());
		}
		this_Store_6=ruleStore
		{
			$current = $this_Store_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStructure
entryRuleStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructureRule()); }
	iv_ruleStructure=ruleStructure
	{ $current=$iv_ruleStructure.current; }
	EOF;

// Rule Structure
ruleStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStructureAccess().getIfParserRuleCall_0());
		}
		this_If_0=ruleIf
		{
			$current = $this_If_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStructureAccess().getLoopParserRuleCall_1());
		}
		this_Loop_1=ruleLoop
		{
			$current = $this_Loop_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStructureAccess().getDoAllParserRuleCall_2());
		}
		this_DoAll_2=ruleDoAll
		{
			$current = $this_DoAll_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getIsInParserRuleCall_0());
		}
		this_IsIn_0=ruleIsIn
		{
			$current = $this_IsIn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getNotParserRuleCall_1());
		}
		this_Not_1=ruleNot
		{
			$current = $this_Not_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObject
entryRuleObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectRule()); }
	iv_ruleObject=ruleObject
	{ $current=$iv_ruleObject.current; }
	EOF;

// Rule Object
ruleObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getObjectAccess().getHTMLTYPEParserRuleCall_0());
		}
		ruleHTMLTYPE
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_typeName_1_0=RULE_STRING
				{
					newLeafNode(lv_typeName_1_0, grammarAccess.getObjectAccess().getTypeNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectRule());
					}
					setWithLastConsumed(
						$current,
						"typeName",
						lv_typeName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleHTMLTYPE
entryRuleHTMLTYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHTMLTYPERule()); }
	iv_ruleHTMLTYPE=ruleHTMLTYPE
	{ $current=$iv_ruleHTMLTYPE.current.getText(); }
	EOF;

// Rule HTMLTYPE
ruleHTMLTYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='class'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLTYPEAccess().getClassKeyword_0());
		}
		    |
		kw='id'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLTYPEAccess().getIdKeyword_1());
		}
		    |
		kw='name'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLTYPEAccess().getNameKeyword_2());
		}
	)
;

// Entry rule entryRuleCollection
entryRuleCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionRule()); }
	iv_ruleCollection=ruleCollection
	{ $current=$iv_ruleCollection.current; }
	EOF;

// Rule Collection
ruleCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCollectionAccess().getObjObjectParserRuleCall_0());
			}
			lv_obj_0_0=ruleObject
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCollectionRule());
				}
				add(
					$current,
					"obj",
					lv_obj_0_0,
					"org.xtext.example.mydsl.MyDsl.Object");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAlert
entryRuleAlert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlertRule()); }
	iv_ruleAlert=ruleAlert
	{ $current=$iv_ruleAlert.current; }
	EOF;

// Rule Alert
ruleAlert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Alert'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlertAccess().getAlertKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_STRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getAlertAccess().getTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlertRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleRefresh
entryRuleRefresh returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRefreshRule()); }
	iv_ruleRefresh=ruleRefresh
	{ $current=$iv_ruleRefresh.current.getText(); }
	EOF;

// Rule Refresh
ruleRefresh returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Refresh'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getRefreshAccess().getRefreshKeyword());
	}
;

// Entry rule entryRuleNavigate
entryRuleNavigate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigateRule()); }
	iv_ruleNavigate=ruleNavigate
	{ $current=$iv_ruleNavigate.current; }
	EOF;

// Rule Navigate
ruleNavigate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Navigate'
		{
			newLeafNode(otherlv_0, grammarAccess.getNavigateAccess().getNavigateKeyword_0());
		}
		(
			(
				lv_url_1_0=RULE_STRING
				{
					newLeafNode(lv_url_1_0, grammarAccess.getNavigateAccess().getUrlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigateRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getStoreKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreAccess().getObjObjectParserRuleCall_1_0());
				}
				lv_obj_1_0=ruleObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreRule());
					}
					set(
						$current,
						"obj",
						lv_obj_1_0,
						"org.xtext.example.mydsl.MyDsl.Object");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoreAccess().getAsKeyword_2());
		}
		(
			(
				lv_objName_3_0=RULE_STRING
				{
					newLeafNode(lv_objName_3_0, grammarAccess.getStoreAccess().getObjNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"objName",
						lv_objName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleClick
entryRuleClick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickRule()); }
	iv_ruleClick=ruleClick
	{ $current=$iv_ruleClick.current; }
	EOF;

// Rule Click
ruleClick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Click'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickAccess().getClickKeyword_0());
		}
		(
			(
				lv_innerhtml_1_0=RULE_STRING
				{
					newLeafNode(lv_innerhtml_1_0, grammarAccess.getClickAccess().getInnerhtmlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClickRule());
					}
					setWithLastConsumed(
						$current,
						"innerhtml",
						lv_innerhtml_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFill
entryRuleFill returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFillRule()); }
	iv_ruleFill=ruleFill
	{ $current=$iv_ruleFill.current; }
	EOF;

// Rule Fill
ruleFill returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Fill'
		{
			newLeafNode(otherlv_0, grammarAccess.getFillAccess().getFillKeyword_0());
		}
		(
			(
				lv_nametag_1_0=RULE_STRING
				{
					newLeafNode(lv_nametag_1_0, grammarAccess.getFillAccess().getNametagSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFillRule());
					}
					setWithLastConsumed(
						$current,
						"nametag",
						lv_nametag_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSetCheckBox
entryRuleSetCheckBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetCheckBoxRule()); }
	iv_ruleSetCheckBox=ruleSetCheckBox
	{ $current=$iv_ruleSetCheckBox.current; }
	EOF;

// Rule SetCheckBox
ruleSetCheckBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SetCheckBox'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetCheckBoxAccess().getSetCheckBoxKeyword_0());
		}
		(
			(
				lv_nametag_1_0=RULE_STRING
				{
					newLeafNode(lv_nametag_1_0, grammarAccess.getSetCheckBoxAccess().getNametagSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetCheckBoxRule());
					}
					setWithLastConsumed(
						$current,
						"nametag",
						lv_nametag_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleIsIn
entryRuleIsIn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsInRule()); }
	iv_ruleIsIn=ruleIsIn
	{ $current=$iv_ruleIsIn.current; }
	EOF;

// Rule IsIn
ruleIsIn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Is'
		{
			newLeafNode(otherlv_0, grammarAccess.getIsInAccess().getIsKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_STRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getIsInAccess().getTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsInRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getIsInAccess().getInKeyword_2());
		}
		(
			(
				(
					lv_title_3_0=RULE_STRING
					{
						newLeafNode(lv_title_3_0, grammarAccess.getIsInAccess().getTitleSTRINGTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsInRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getIsInAccess().getObjObjectParserRuleCall_3_1_0());
					}
					lv_obj_4_0=ruleObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIsInRule());
						}
						set(
							$current,
							"obj",
							lv_obj_4_0,
							"org.xtext.example.mydsl.MyDsl.Object");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5='?'
		{
			newLeafNode(otherlv_5, grammarAccess.getIsInAccess().getQuestionMarkKeyword_4());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Not'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getCondConditionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='If'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getCondConditionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='Then'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfAccess().getThenKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfAccess().getColonKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getActionThenActionParserRuleCall_6_0());
				}
				lv_actionThen_6_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"actionThen",
						lv_actionThen_6_0,
						"org.xtext.example.mydsl.MyDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIfAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_8='Else'
			{
				newLeafNode(otherlv_8, grammarAccess.getIfAccess().getElseKeyword_8_0());
			}
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getIfAccess().getColonKeyword_8_1());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getActionElseActionParserRuleCall_8_3_0());
					}
					lv_actionElse_11_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						set(
							$current,
							"actionElse",
							lv_actionElse_11_0,
							"org.xtext.example.mydsl.MyDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getIfAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getLoopKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getColonKeyword_1());
		}
		otherlv_2='Condition'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopAccess().getConditionKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoopAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getCondConditionParserRuleCall_4_0());
				}
				lv_cond_4_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"cond",
						lv_cond_4_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='Interval'
		{
			newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getIntervalKeyword_5());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getLoopAccess().getColonKeyword_6());
		}
		(
			(
				lv_milliseconds_7_0=RULE_INT
				{
					newLeafNode(lv_milliseconds_7_0, grammarAccess.getLoopAccess().getMillisecondsINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoopRule());
					}
					setWithLastConsumed(
						$current,
						"milliseconds",
						lv_milliseconds_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='Do'
		{
			newLeafNode(otherlv_8, grammarAccess.getLoopAccess().getDoKeyword_8());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getLoopAccess().getColonKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getActionsActionParserRuleCall_11_0());
				}
				lv_actions_11_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"actions",
						lv_actions_11_0,
						"org.xtext.example.mydsl.MyDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleDoAll
entryRuleDoAll returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoAllRule()); }
	iv_ruleDoAll=ruleDoAll
	{ $current=$iv_ruleDoAll.current; }
	EOF;

// Rule DoAll
ruleDoAll returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='For'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoAllAccess().getForKeyword_0());
		}
		otherlv_1='all'
		{
			newLeafNode(otherlv_1, grammarAccess.getDoAllAccess().getAllKeyword_1());
		}
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getDoAllAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoAllAccess().getCollCollectionParserRuleCall_3_0());
				}
				lv_coll_3_0=ruleCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoAllRule());
					}
					set(
						$current,
						"coll",
						lv_coll_3_0,
						"org.xtext.example.mydsl.MyDsl.Collection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='do'
		{
			newLeafNode(otherlv_4, grammarAccess.getDoAllAccess().getDoKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getDoAllAccess().getColonKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDoAllAccess().getTodoActionParserRuleCall_6_0_0());
					}
					lv_todo_6_1=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoAllRule());
						}
						set(
							$current,
							"todo",
							lv_todo_6_1,
							"org.xtext.example.mydsl.MyDsl.Action");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDoAllAccess().getTodoStructureParserRuleCall_6_0_1());
					}
					lv_todo_6_2=ruleStructure
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoAllRule());
						}
						set(
							$current,
							"todo",
							lv_todo_6_2,
							"org.xtext.example.mydsl.MyDsl.Structure");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
